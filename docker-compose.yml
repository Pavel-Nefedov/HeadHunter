version: "3.7"
services:

  python_container:
    container_name: ${PYTHON_CONTAINER_NAME}
    restart: always
    build:
      context: ./
      dockerfile: ./docker/development/python-cli.docker
#    command: gunicorn agile_hh.wsgi:application --bind 0.0.0.0:8000
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./:/usr/src/app/
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - postgres_container

  postgres_container:
    container_name: ${POSTGRES_CONTAINER_NAME}
    image: postgres:14.0-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres-volume:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

#  nginx_container:
#    container_name: ${NGINX_CONTAINER_NAME}
#    build:
#      context: ./
#      dockerfile: ./docker/development/nginx.docker
#    volumes:
#      - ./staticfiles:/home/app/web/staticfiles
#    ports:
#      - "80:80"
#    depends_on:
#      - python_container

  adminer_container:
    container_name: ${ADMINER_CONTAINER_NAME}
    image: adminer
    restart: always
    environment:
      ADMINER_DEFAULT_SERVER: postgres_container
      ADMINER_DESIGN: nette
    ports:
      - "8080:8080"

volumes:
  postgres-volume:
  static_volume: