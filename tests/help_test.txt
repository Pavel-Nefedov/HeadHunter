
Smoke - тесты на проверку базовых функций
Regression - тесты на текущую функциональность, при обновлении кода
Compatibility - тесты на проверку совместимости приложения с различными библиотеками
Integration - тесты на проверку работоспособности приложения в различных средах
Acceptance - приемочные тесты на соответствие работоспособности кода пороговым значениям
Alpha - тестирование приложение на небольшой группе
Beta - тестирование приложение на большей группе
Perfomance - проверка сервиса на производительность
Strees - проверка сервиса на поведение при повышенных нагрузках.


Тестовые данные
Фикстуры - тестовое состояние системы или данных
Цель использования тестовых данных (фикстур) - если у вас сложный test case, то подготовка нужного
состояния легко может занимать много ресурсов. Используя фикстуры предварительную подготовку состояния пропускаем
и сразу приступаем к тестированию.

Фикстуры могут выступать в виде:
состояние базы данных
набор переменных среды
набор файлов с необходимым содержанием.




Для внесения тестовых данных применяются те же методы, что и в Unittest: setUp(), setUpClass() и tearDownClass().

Необходимо создавать тестовые данные в этих классах, если они будут использоваться в последующих нескольких тестах:
Метод setUpClass() - вызывается один раз в начале тестов класса.
Метод setUp() - выполняется перед каждым тестом
Метод tearDownClass() - вызывается после выполнения всех тестов класса.



Что нужно тестировать:

1. В моделях:
- валидация полей моделей,
- методы по работе с моделями,
- метаданные полей

2. В формах:
- Проверка доступа к форме
- Проверка данных по полям. Поля проверяются на клиенте, но Вы можете подстраховаться и проверить
валидность данных и на сервере. Вдруг забыли настроить проверку формы на "фронте"
- Проверка записи итоговых данных после заполнения формы.
- Проверка редиректов


3. В views:
- Проверка контекста при формировании страниц
- Проверка методов отображения URLs с соответствующими шаблонами.
- Различные элементы с редактированием страниц. Например появления поста, после его добавления.


4 URLs:
- доступность всех URL приложения для авторизованного пользователя
(если групп несколько, то для каждой по отдельности);
- недоступность определенных страниц для неавторизованного пользователя;
- перенаправление неавторизованного пользователя на страницу логина при попытке зайти
на запрещенные страницы или на страницу предупреждения.
